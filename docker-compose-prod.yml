services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: /gunicorn.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file: .env

  postgres:
    image: postgres:15.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env

  nginx-proxy:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "8000:80"
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    env_file: .env
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
    name: rhythmix_db
    driver: local
  certs:
  html:
  vhost:
  acme:
